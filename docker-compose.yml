version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 111
      MYSQL_DATABASE: spikeguard
      MYSQL_USER: spikeuser
      MYSQL_PASSWORD: 111
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

  auth_service:
    build: ./auth
    container_name: auth_service
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=mysql+pymysql://spikeuser:111@mysql/spikeguard
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy  # updated here

  ingestion_service:
    build: ./ingestion
    container_name: ingestion_service
    ports:
      - "5001:5000"
    environment:
      - DATABASE_URL=mysql+pymysql://spikeuser:111@mysql/spikeguard
      - KAFKA_BROKER=kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy

  analyzer_consumer:
    build: ./analyzer/consumer
    container_name: analyzer_consumer
    environment:
      - DATABASE_URL=mysql+pymysql://spikeuser:111@mysql/spikeguard
      - KAFKA_BROKER=kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy

  analyzer_api:
    build: ./analyzer/api
    container_name: analyzer_api
    ports:
      - "5002:5000"
    environment:
      - DATABASE_URL=mysql+pymysql://spikeuser:111@mysql/spikeguard
    depends_on:
      mysql:
        condition: service_healthy

  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth_service
      - ingestion_service
      - analyzer_api
